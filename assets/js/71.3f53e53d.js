(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{579:function(t,e,o){"use strict";o.r(e);var s=o(15),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("OOP vs GP")]),t._v(" "),o("p",[t._v("OOP企图将data和methods关联在一起。但是"),o("font",{attrs:{color:"red"}},[t._v("整个C++标准库是用泛型编程设计的。")]),t._v("标准库试图将data和method分开，使用iterator作为桥梁。")],1),t._v(" "),o("img",{staticStyle:{zoom:"50%"},attrs:{src:"/img/Basic/C++/STL/GP.png",alt:"image-20210905085427893"}}),t._v(" "),o("p",[t._v("例如，当我们对容器进行排序，由随机访问迭代器构成的容器能够使用"),o("code",[t._v("algorithm")]),t._v("这个库的"),o("code",[t._v("sort")]),t._v("方法，进行排序。但是，"),o("code",[t._v("list")]),t._v("这个容器的迭代器并不是随机访问的。随机访问的迭代可以进行"),o("code",[t._v("++,--,+=5")]),t._v("这样操作。显然"),o("code",[t._v("list")]),t._v("不支持这样操作。")]),t._v(" "),o("p",[t._v("这样的好处是，对于不同类型的数据构成的容器，只要满足特定要求就能使用。")])])}),[],!1,null,null,null);e.default=v.exports}}]);